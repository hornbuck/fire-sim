"use strict";(self.webpackChunksim_firefighter=self.webpackChunksim_firefighter||[]).push([[524],{742:(e,t,i)=>{var s=i(440);class r extends Phaser.Scene{constructor(){super({key:"IntroScene"})}preload(){this.load.image("logo","assets/temp-logo.png")}create(){const e=this.cameras.main.centerX,t=this.cameras.main.centerY;this.add.image(e,t,"logo").setOrigin(.5);const i=this.add.text(e,t+100,"Click to Start",{fontFamily:"Courier, monospace",fontSize:"32px",color:"#ffffff",backgroundColor:"#000000",padding:{x:10,y:5}}).setOrigin(.5).setInteractive();i.on("pointerdown",(()=>{this.scene.start("MapScene"),this.scene.launch("UIScene")})),this.tweens.add({targets:i,alpha:.5,duration:1e3,yoyo:!0,repeat:-1})}}class a{constructor(e,t,i,s){this.x=e,this.y=t,this.width=i,this.height=s,this.left=null,this.right=null}isLeaf(){return null===this.left&&null===this.right}}const o=class{constructor(e,t,i){this.root=new a(0,0,e,t),this.minPartitionSize=i}partition(e=this.root){if(!e.isLeaf())return!1;if(e.width<=this.minPartitionSize||e.height<=this.minPartitionSize)return!1;let t=Math.random()>.5;e.width>e.height&&e.width/e.height>=1.25?t=!1:e.height>e.width&&e.height/e.width>=1.25&&(t=!0);const i=(t?e.height:e.width)-this.minPartitionSize;if(i<=this.minPartitionSize)return!1;const s=Math.floor(Math.random()*(i-this.minPartitionSize+1)+this.minPartitionSize),r=(t?e.height:e.width)-s;return!(s<this.minPartitionSize||r<this.minPartitionSize||(t?(e.left=new a(e.x,e.y,e.width,s),e.right=new a(e.x,e.y+s,e.width,e.height-s)):(e.left=new a(e.x,e.y,s,e.height),e.right=new a(e.x+s,e.y,e.width-s,e.height)),console.log(`Partitioned node at (${e.x}, ${e.y}, ${e.width}, ${e.height})`),console.log(`Left: (${e.left.x}, ${e.left.y}, ${e.left.width}, ${e.left.height})`),console.log(`Right: (${e.right.x}, ${e.right.y}, ${e.right.width}, ${e.right.height})`),0))}partitionAll(e=this.root){this.partition(e)&&(this.partitionAll(e.left),this.partitionAll(e.right))}getPartitions(e=this.root,t=[]){return e.isLeaf()?t.push(e):(e.left&&this.getPartitions(e.left,t),e.right&&this.getPartitions(e.right,t)),t}visualizePartitions(){const e=this.getPartitions();console.log("Visualizing Partitions:"),e.forEach(((e,t)=>{console.log(`Partition ${t+1}: (${e.x}, ${e.y}, ${e.width}, ${e.height})`)}))}};class n{constructor(e,t,i){this.x=e,this.y=t,this.terrain=i,this.burnStatus="unburned";const s=this.getTerrainAttributes(i);this.flammability=s.flammability,this.fuel=s.fuel}getTerrainAttributes(e){return{grass:{flammability:.9,fuel:1},shrub:{flammability:.8,fuel:2},tree:{flammability:.6,fuel:3},water:{flammability:0,fuel:0}}[e]||{flammability:0,fuel:0}}toString(){return`{ x: ${this.x}, y: ${this.y}, terrain: '${this.terrain}', flammability: ${this.flammability}, fuel: ${this.fuel}, burnStatus: '${this.burnStatus}' }`}}const h=16,l=256,d=4095;let c;function m(e){const t=(()=>{const e=4294967296;let t,i;return{setSeed:s=>{i=t=(void 0===s?Math.random()*e:s)>>>0},getSeed:()=>t,rand:()=>(i=(1664525*i+1013904223)%e)/e}})();t.setSeed(e),c=new Array(4096);for(let e=0;e<4096;e++)c[e]=t.rand()}function p(e){return e*e*e*(e*(6*e-15)+10)}function u(e,t,i){return(1-i)*e+i*t}const g={seed:m,perlin2:function(e,t){void 0===c&&m(Math.random());const i=Math.floor(e),s=Math.floor(t),r=t-s,a=p(e-i),o=p(r),n=u(c[(i&d)+(s&d)*h],c[(i+1&d)+(s&d)*h],a),l=u(c[(i&d)+(s+1&d)*h],c[(i+1&d)+(s+1&d)*h],a);return u(n,l,o)},perlin3:function(e,t,i){void 0===c&&m(Math.random());const s=Math.floor(e),r=Math.floor(t),a=Math.floor(i),o=t-r,n=i-a,g=p(e-s),f=p(o),x=(p(n),u(c[(s&d)+(r&d)*h+(a&d)*l],c[(s+1&d)+(r&d)*h+(a&d)*l],g)),w=u(c[(s&d)+(r+1&d)*h+(a&d)*l],c[(s+1&d)+(r+1&d)*h+(a&d)*l],g);return u(x,w,f)}};class f{constructor(e,t,i=5,s=Math.random()){this.width=e,this.height=t,this.scale=i;const r="string"==typeof s?this.stringToNumber(s):s;g.seed(r),this.noiseGrid=this.generateNoiseGrid()}stringToNumber(e){let t=0;for(let i=0;i<e.length;i++)t=(t<<5)-t+e.charCodeAt(i),t|=0;return Math.abs(t)/1e3}generateNoiseGrid(){const e=[];for(let t=0;t<this.height;t++){const i=[];for(let e=0;e<this.width;e++){const s=g.perlin2(e/this.scale,t/this.scale);i.push(s)}e.push(i)}return e}setSeed(e){const t="string"==typeof e?this.stringToNumber(e):e;g.seed(t),this.noiseGrid=this.generateNoiseGrid()}getNoise(e,t){if(e>=this.width||t>=this.height||e<0||t<0)throw new RangeError("Coordinates out of bounds");return this.noiseGrid[t][e]}}class x{static apply(e){const t=JSON.parse(JSON.stringify(e));for(let i=1;i<e.length-1;i++)for(let s=1;s<e[0].length-1;s++){let r=this.getNeighborCounts(e,s,i);r.tree>4?t[i][s].terrain="tree":r.grass>5?t[i][s].terrain="grass":r.water>5&&(t[i][s].terrain="water")}return t}static getNeighborCounts(e,t,i){let s={tree:0,grass:0,shrub:0,water:0};return[e[i-1][t-1],e[i-1][t],e[i-1][t+1],e[i][t-1],e[i][t+1],e[i+1][t-1],e[i+1][t],e[i+1][t+1]].forEach((e=>{e&&s[e.terrain]++})),s}}class w{constructor(e,t,i,s=Date.now()+Math.random()){this.width=e,this.height=t,this.minSize=i,this.perlin=new f(e,t,5,s),this.bsp=new o(e,t,i),this.bsp.visualizePartitions(),this.grid=this.generateMap()}regenerateMap(e){this.perlin.setSeed(e),this.grid=this.generateMap()}generateMap(e){const t=Array.from({length:this.height},(()=>Array(this.width).fill(null))),i=this.bsp.getPartitions();return 0===i.length&&(console.error("BSPPartition failed to create any partitions. Falling back to single-partition grid."),i.push({x:0,y:0,width:this.width,height:this.height})),i.forEach((e=>{for(let i=e.y;i<e.y+e.height;i++)for(let s=e.x;s<e.x+e.width;s++){const e=this.perlin.getNoise(s,i),r=this.getTerrainFromNoise(e);t[i][s]=new n(s,i,r)}})),x.apply(t)}getTerrainFromNoise(e){let t="shrub";return e<.2?t="water":e<.4?t="tree":e<.7&&(t="grass"),t}printMap(){this.grid.forEach((e=>{console.log(e.map((e=>e.terrain)).join(" | "))}))}printBurnStatusMap(){this.grid.forEach((e=>{console.log(e.map((e=>e.burnStatus)).join(" | "))}))}getTile(e,t){return e>=0&&e<this.width&&t>=0&&t<this.height?this.grid[t][e]:null}}const S=class{constructor(e,t){this.map=e,this.weather=t,console.log("Map object received: ",this.map),console.log("Weather object received:",this.weather)}simulateFireStep(){const e=[];for(let t=0;t<this.map.height;t++)for(let i=0;i<this.map.width;i++){const s=this.map.grid[t][i];"burning"===s.burnStatus&&e.push({tile:s,x:i,y:t})}let t=0;e.forEach((({tile:e,x:i,y:s})=>{t+=this.processBurningTile(e,this.map.grid,i,s)}))}copyGrid(){return this.map.grid.map((e=>e.map((e=>new n(e.x,e.y,e.terrain)))))}updateBurntTileSprite(e,t){const i=this.map.grid[t][e];i&&i.sprite&&i.sprite.setTexture(i.terrain)}processBurningTile(e,t,i,s){let r=this.spreadFire(e,i,s,t),a=t[s][i];return e.fuel=Math.max(0,a.fuel-1),0===e.fuel&&(e.burnStatus="burnt",e.fireS&&setTimeout((()=>{e.fireS.extinguishFire(),"grass"===e.terrain?e.terrain="burned-grass":"shrub"===e.terrain?e.terrain="burned-shrub":"tree"===e.terrain&&(e.terrain="burned-tree"),this.updateBurntTileSprite(i,s)}),2e3),this.updateBurntTileSprite(i,s)),r}spreadFire(e,t,i,s){const r=this.getNeighbors(t,i);let a=0,o=0;"tree"===e.terrain&&(o=30);for(const e of r){const r=s[e.y][e.x];if("unburned"===r.burnStatus&&this.canIgnite(r)){const s=this.isTileDownwind({x:t,y:i},e);a+=this.attemptIgnite(r,s,o)}}return a}isTileDownwind(e,t){const{windDirection:i}=this.weather;return"N"===i&&t.y<e.y||"S"===i&&t.y>e.y||"E"===i&&t.x>e.x||"W"===i&&t.x<e.x}canIgnite(e){return"unburned"===e.burnStatus&&e.flammability>0}attemptIgnite(e,t,i=0){if("unburned"!==e.burnStatus)return 0;let s=this.calculateIgnitionChance(e);return t&&(s+=.7*this.weather.windSpeed),s+=i,s>70?(e.burnStatus="burning",1):0}getNeighbors(e,t){return[{x:-1,y:0},{x:1,y:0},{x:0,y:-1},{x:0,y:1}].map((i=>({x:e+i.x,y:t+i.y}))).filter((e=>e.x>=0&&e.x<this.map.width&&e.y>=0&&e.y<this.map.height))}calculateIgnitionChance(e){let t=100*e.flammability+this.getWeatherInfluenceFromWeather();return"tree"===e.terrain&&(t*=.9),t}getWeatherInfluenceFromWeather(){return this.weather.getWeatherInfluence()}},y=class{constructor(e=68,t=70,i=0,s="N"){this.temperature=e,this.humidity=t,this.windSpeed=i,this.windDirection=s}updateWeather(e,t,i,s){this.temperature=e,this.humidity=t,this.windSpeed=i,this.windDirection=s}getWeatherInfluence(e=null){let t=0;return t+=.05*(this.temperature-32),t-=.05*this.humidity,t+=.2*this.windSpeed,e&&e===this.windDirection&&(t+=.3*this.windSpeed),parseFloat(t.toFixed(2))}};let T,b,I,M,k,C,_,P,O,A,E,F,D,v,R,W,N,Z=[],z="",$="none",L=[0,0,0,0,0,0,0],H=0,B=10,U=5,G=3,j=3,V=2,Y=1,K=5;function X(e,t,i,s,r,a,o,n){console.log(`Resource Activated: ${i}`),t.setInteractive(),t.on("pointerdown",(function(e,r,o,h){!function(e){for(let t=0;t<=6;t++){let i=e[t];`${$}`===i.name&&(i.setTexture(i.name),z="NO-WATER",$="none")}}(Z),t.setTexture("active-"+i),n.input.setDefaultCursor("url("+s+"), pointer"),z=a,$=`${i}`}),this)}function J(e,t,i,s,r){let a=r.add.sprite(i,s,t);a.setVisible(!1),e.on("pointerover",(function(){a.setVisible(!0)})),e.on("pointerout",(function(){a.setVisible(!1)}))}function q(e,t){t.setVisible(!0),e.time.delayedCall(1e3,(()=>{t.setVisible(!1)}))}function Q(e){const t=(this.cameras.main.width-this.map.width*this.tileSize)/2,i=(this.cameras.main.height-this.map.height*this.tileSize)/2;let s=Math.floor((e.x-t)/this.tileSize),r=Math.floor((e.y-i)/this.tileSize);if(console.warn(`Fire at tile coordinates: (${s}, ${r})`),s>=0&&s<this.map.width&&r>=0&&r<this.map.height){let e=this.map.getTile(s,r);console.log(e?`Tile found: ${e.toString()}`:"No tile found at this position!"),e&&(e.burnStatus="extinguished",console.log(`Tile at (${s}, ${r}) burn status updated to: ${e.burnStatus}`))}}let ee=4e3,te=3e3,ie=3500,se=1700,re=3e3,ae=3e3;class oe{constructor(e){this.energy=e,this.sprite}lightFire(e,t,i){console.log("Attempting to light fire..."),e.anims.exists("fireAnimConfig")?console.log("Fire animation already exists."):(console.log("Creating fire animation..."),e.anims.create({key:"fireAnimConfig",frames:e.anims.generateFrameNumbers("fire-blaze",{start:0,end:5}),frameRate:10,repeat:-1}));let s=e.add.sprite(t.x+16,t.y,"fire-blaze").setDepth(1).setScale(.75);console.log("Fire sprite created:",s),e.anims.exists("fireAnimConfig")?(console.log("Playing fire animation..."),s.play("fireAnimConfig")):console.error("ERROR: Animation 'fireAnimConfig' does not exist!"),i.add(s),s.tile=t,s.setInteractive(),s.on("pointerdown",(function(){"WATER"===z&&function(e,t,i,s){let r=new oe(3);"hose"===$&&(B>0?(0==L[0]?(B-=1,r.useHose(e,t,i,s),r.startTimer(0,e,3e3,750,50),H+=100):q(e,b),e.time.delayedCall(ee,(()=>{Q.call(e,s),T.setText(`${H}`)}))):(console.log("Sorry! You ran out!"),q(e,I))),"extinguisher"===$&&(U>0?0==L[1]?(U-=1,r.useFireExtinguisher(e,t,i,s),r.startTimer(1,e,500,750,130),H+=50,T.setText(`${H}`)):q(e,b):(console.log("Sorry! You ran out!"),q(e,M))),"helicopter"===$&&(G>0?(0==L[2]?(G-=1,r.useHelicopter(e,t,i,s),r.startTimer(2,e,7e3,750,210),H+=300):q(e,b),e.time.delayedCall(ie,(()=>{Q.call(e,s),T.setText(`${H}`)}))):(console.log("Sorry! You ran out!"),q(e,k))),"firetruck"===$&&(j>0?(0==L[3]?(j-=1,r.useFiretruck(e,t,i,s),r.startTimer(3,e,5e3,750,290),H+=200):q(e,b),e.time.delayedCall(te,(()=>{Q.call(e,s),T.setText(`${H}`)}))):(console.log("Sorry! You ran out!"),q(e,C))),"airtanker"===$&&(V>0?(0==L[4]?(V-=1,r.useAirtanker(e,t,i,s),r.startTimer(4,e,1e4,750,370),H+=500):q(e,b),e.time.delayedCall(se,(()=>{Q.call(e,s),T.setText(`${H}`)}))):(console.log("Sorry! You ran out!"),q(e,_))),"hotshot-crew"===$&&(Y>0?(0==L[5]?(Y-=1,r.useHotshotCrew(e,t,i,s),r.startTimer(5,e,3e3,750,450),H+=300):q(e,b),e.time.delayedCall(re,(()=>{Q.call(e,s),T.setText(`${H}`)}))):(console.log("Sorry! You ran out!"),q(e,P))),"smokejumper"===$&&(K>0?(0==L[6]?(K-=1,r.useSmokejumpers(e,t,i,s),r.startTimer(6,e,750,530),H+=1e3):q(e,b),e.time.delayedCall(5e3,(()=>{Q.call(e,s),T.setText(`${H}`)}))):(console.log("Sorry! You ran out!"),q(e,O)))}(e,s.x,s.y,s)})),this.sprite=s}extinguishFire(){this.sprite.destroy()}startTimer(e,t,i,s,r){console.log("Timer activated!"),L[e]=1,t.anims.exists("set-timer")||t.anims.create({key:"timerAnimConfig",frames:t.anims.generateFrameNumbers("set-timer"),frameRate:30,repeat:-1}),N.x=s,N.y=r,N.setVisible(!0),N.play("timerAnimConfig"),t.time.delayedCall(i,(()=>{N.setVisible(!1),t.anims.remove("timerAnimConfig"),L[e]=0})),console.log(`Cooldown in StartTimer: ${L[e]}`)}useHose(e,t,i,s){console.log("Team of firefighters activated!"),e.anims.create({key:"hoseAnimConfig",frames:e.anims.generateFrameNumbers("set-hose"),frameRate:40,repeat:-1});let r=e.add.sprite(t+30,i+10,"set-hose").setDepth(1).setScale(1,1);r.play("hoseAnimConfig"),e.time.delayedCall(ee,(()=>{r.destroy()})),e.time.delayedCall(ee,(()=>{s.destroy()}))}useFireExtinguisher(e,t,i,s){console.log("Fire extinguisher activated!"),e.anims.create({key:"extinguisherAnimConfig",frames:e.anims.generateFrameNumbers("set-extinguisher"),frameRate:10,repeat:-1});let r=e.add.sprite(t,i,"set-extinguisher").setDepth(1).setScale(.75,.75);r.play("extinguisherAnimConfig"),e.time.delayedCall(3e3,(()=>{r.destroy()})),s.destroy()}useFiretruck(e,t,i,s){console.log("Fire truck activated!"),e.anims.create({key:"firetruckAnimConfig",frames:e.anims.generateFrameNumbers("set-firetruck"),frameRate:10,repeat:-1});let r=e.add.sprite(t+40,i,"set-firetruck").setDepth(1).setScale(1.3,1.3);r.play("firetruckAnimConfig"),e.time.delayedCall(te,(()=>{r.destroy()})),e.time.delayedCall(te,(()=>{s.destroy()}))}useHelicopter(e,t,i,s){console.log("Helicopter activated!"),e.anims.create({key:"helicopterAnimConfig",frames:e.anims.generateFrameNumbers("set-helicopter"),frameRate:30,repeat:-1});let r=e.add.sprite(t,i-40,"set-helicopter").setDepth(1).setScale(1.5,1.5);r.play("helicopterAnimConfig"),e.time.delayedCall(ie,(()=>{r.destroy()})),e.time.delayedCall(ie,(()=>{s.destroy()}))}useAirtanker(e,t,i,s){console.log("Airtanker activated!"),e.anims.create({key:"airtankerAnimConfig",frames:e.anims.generateFrameNumbers("set-airtanker"),frameRate:30,repeat:-1});let r=e.add.sprite(t,i-40,"set-airtanker").setDepth(1).setScale(2.5,2.5);r.play("airtankerAnimConfig"),e.time.delayedCall(se,(()=>{r.destroy()})),e.time.delayedCall(se,(()=>{s.destroy()}))}useHotshotCrew(e,t,i,s){console.log("Hotshot Crew activated!"),e.anims.create({key:"hotshotAnimConfig",frames:e.anims.generateFrameNumbers("set-hotshot"),frameRate:30,repeat:-1});let r=e.add.sprite(t+40,i,"set-hotshot").setDepth(1).setScale(1,1);r.play("hotshotAnimConfig"),e.time.delayedCall(re,(()=>{r.destroy()})),e.time.delayedCall(re,(()=>{s.destroy()}))}useSmokejumpers(e,t,i,s){console.log("Smokejumpers activated!"),e.anims.create({key:"smokejumpersAnimConfig",frames:e.anims.generateFrameNumbers("set-smokejumpers"),frameRate:30,repeat:-1}),e.anims.create({key:"smokejumpersGroundAnimConfig",frames:e.anims.generateFrameNumbers("set-smokejumpers-dig"),frameRate:30,repeat:-1});let r=e.add.sprite(t,i-40,"set-smokejumpers").setDepth(1).setScale(1,1);r.play("smokejumpersAnimConfig"),e.time.delayedCall(2e3,(()=>{r.destroy();let s=e.add.sprite(t,i,"set-smokejumpers-dig").setDepth(2).setScale(.5,.5);s.play("smokejumpersGroundAnimConfig"),e.time.delayedCall(ae,(()=>{s.destroy()}))})),e.time.delayedCall(ae,(()=>{s.destroy()}))}}class ne extends Phaser.Scene{constructor(){super("MapScene"),console.log("MapScene Constructor Called"),this.MAP_WIDTH=100,this.MAP_HEIGHT=100,this.TILE_SIZE=64,this.MIN_PARTITION_SIZE=5,this.CAMERA_SPEED=10,this.MIN_ZOOM=.25,this.MAX_ZOOM=2,this.UI_WIDTH=100,this.FIRE_SPREAD_INTERVAL=8e3,this.elapsedTime=0,this.lastFireSpreadTime=0,this.isFireSimRunning=!1,this.currentZoom=1,this.isPanning=!1}preload(){console.log("MapScene Preload Starting"),this.load.image("water","assets/64x64-Map-Tiles/water.png"),this.load.image("grass","assets/64x64-Map-Tiles/grass.png"),this.load.image("shrub","assets/64x64-Map-Tiles/Shrubs/shrubs-on-sand.png"),this.load.image("tree","assets/64x64-Map-Tiles/Trees/trees-on-light-dirt.png"),this.load.image("burned-grass","assets/64x64-Map-Tiles/Burned%20Tiles/burned-grass.png"),this.load.image("burned-shrub","assets/64x64-Map-Tiles/Burned%20Tiles/burned-shrubs-on-sand.png"),this.load.image("burned-tree","assets/64x64-Map-Tiles/Burned%20Tiles/burned-trees-on-light-dirt.png"),this.load.spritesheet("water-sheet","assets/64x64-Map-Tiles/splash-sheet.png",{frameWidth:64,frameHeight:64}),this.load.spritesheet("fire-blaze","assets/64x64-Map-Tiles/animated-flame.png",{frameWidth:64,frameHeight:64})}create(){console.log("MapScene Create Starting"),this.initializeMap(),this.setupCameraControls(),this.scene.isActive("UIScene")||this.scene.launch("UIScene"),this.input.on("pointerdown",this.handleTileClick,this),this.setupEventListeners(),console.log("MapScene Create Finished")}setupEventListeners(){console.log("Setting up MapScene event listeners"),this.scene.get("UIScene").events.on("toggleFire",this.toggleFireSimulation,this),this.scene.get("UIScene").events.on("restartGame",this.initializeMap,this)}setupCameraControls(){const e=this.cameras.main.width-this.UI_WIDTH,t=this.cameras.main.height,i=this.mapPixelWidth/this.mapPixelHeight,s=e/t;this.fitZoomLevel=i>s?Math.min(1,e/this.mapPixelWidth):Math.min(1,t/this.mapPixelHeight),this.MIN_ZOOM=Math.max(.8*this.fitZoomLevel,this.MIN_ZOOM),this.cameras.main.setBounds(0,0,this.mapPixelWidth,this.mapPixelHeight),this.cameras.main.setViewport(0,0,e,t),this.cameras.main.centerOn(this.mapPixelWidth/2,this.mapPixelHeight/2),this.currentZoom=Math.max(this.MIN_ZOOM,1),this.cameras.main.setZoom(this.currentZoom),this.input.on("wheel",((t,i,s,r)=>{if(t.x<e){const e=r>0?-.1:.1;this.currentZoom=Phaser.Math.Clamp(this.currentZoom+e,this.MIN_ZOOM,this.MAX_ZOOM),this.cameras.main.setZoom(this.currentZoom),this.events.emit("zoomChanged",this.currentZoom),this.centerMapIfNeeded()}})),this.input.on("pointerdown",(t=>{(t.middleButtonDown()||t.rightButtonDown())&&t.x<e&&(this.isPanning=!0,this.lastPanPosition={x:t.x,y:t.y},this.input.setDefaultCursor("grabbing"))})),this.input.on("pointermove",(e=>{if(this.isPanning){const t=e.x-this.lastPanPosition.x,i=e.y-this.lastPanPosition.y;this.cameras.main.scrollX-=t/this.currentZoom,this.cameras.main.scrollY-=i/this.currentZoom,this.lastPanPosition={x:e.x,y:e.y}}})),this.input.on("pointerup",(()=>{this.isPanning&&(this.isPanning=!1,this.input.setDefaultCursor("url(assets/cursors/glove.png), pointer"))})),this.cursors=this.input.keyboard.createCursorKeys(),this.wasd={up:this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),down:this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),left:this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),right:this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)},this.zoomKeys={zoomIn:this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.PLUS),zoomOut:this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.MINUS)}}centerMapIfNeeded(){const e=this.mapPixelWidth*this.currentZoom,t=this.mapPixelHeight*this.currentZoom,i=this.cameras.main.width,s=this.cameras.main.height;if(e<i||t<s){const e=this.mapPixelWidth/2,t=this.mapPixelHeight/2;this.cameras.main.pan(e,t,300,"Power2")}}initializeMap(){const e=this.currentZoom||1;this.mapPixelWidth=this.MAP_WIDTH*this.TILE_SIZE,this.mapPixelHeight=this.MAP_HEIGHT*this.TILE_SIZE,this.currentSeed=Date.now()*Math.random(),console.log(`Map Seed: ${this.currentSeed}`),this.map=new w(this.MAP_WIDTH,this.MAP_HEIGHT,this.MIN_PARTITION_SIZE,this.currentSeed),console.log("Map Partitions:"),this.map.bsp.getPartitions().forEach(((e,t)=>{console.log(`Partition ${t}: x=${e.x}, y=${e.y}, width=${e.width}, height=${e.height}`)})),this.weather=new y(68,30,15,"N"),this.fireSpread=new S(this.map,this.weather),this.elapsedTime=0,this.lastFireSpreadTime=0,this.isFireSimRunning=!0,this.currentZoom=Math.max(e,this.MIN_ZOOM),this.mapGroup&&!this.mapGroup.destroyed&&this.mapGroup.destroy(!0),this.mapGroup=this.add.group(),this.flameGroup?this.flameGroup.clear(!0,!0):this.flameGroup=this.add.group(),this.cameras&&this.cameras.main&&(this.cameras.main.setBounds(0,0,this.mapPixelWidth,this.mapPixelHeight),this.cameras.main.centerOn(this.mapPixelWidth/2,this.mapPixelHeight/2),this.cameras.main.setZoom(this.currentZoom)),this.renderMap(this.map,this.TILE_SIZE),this.startFire();for(let e=0;e<4;e++)this.updateFireSpread();this.isFireSimRunning=!1,this.events.emit("weatherUpdated",this.weather),this.events.emit("fireSimToggled",this.isFireSimRunning),this.events.emit("updateGameClock",this.elapsedTime),this.events.emit("mapSizeChanged",{width:this.MAP_WIDTH,height:this.MAP_HEIGHT,pixelWidth:this.mapPixelWidth,pixelHeight:this.mapPixelHeight})}renderMap(e,t){e.grid.forEach(((e,i)=>{e.forEach(((e,s)=>{const r=this.textures.exists(e.terrain)?e.terrain:"defaultTerrain",a=this.add.sprite(s*t,i*t,r).setOrigin(0);e.sprite=a,a.setInteractive(),this.mapGroup.add(a)}))}))}handleTileClick(e){if(this.isPanning)return;const t=this.cameras.main.width-this.UI_WIDTH;if(e.x>t)return;const i=this.cameras.main.getWorldPoint(e.x,e.y);let s=Math.floor(i.x/this.TILE_SIZE),r=Math.floor(i.y/this.TILE_SIZE);if(s>=0&&s<this.map.width&&r>=0&&r<this.map.height){let t=this.map.getTile(s,r);t&&(console.log(`Clicked on ${t.terrain} at (${s}, ${r})`),this.events.emit("tileInfo",{...t,screenX:e.x,screenY:e.y}))}}startFire(){let e,t,i;do{e=Math.floor(Math.random()*this.map.width),t=Math.floor(Math.random()*this.map.height),i=this.map.grid[t][e]}while(0===i.flammability);if(i.burnStatus="burning",console.log(`Starting fire at (${e}, ${t})`),i.sprite){let e=new oe(3);e.lightFire(this,i.sprite,this.flameGroup),i.fireS=e}this.cameras.main.pan(e*this.TILE_SIZE+this.TILE_SIZE/2,t*this.TILE_SIZE+this.TILE_SIZE/2,1e3,"Power2")}updateFireSpread(){console.log("Simulating fire step..."),this.fireSpread.simulateFireStep(),this.map.grid.forEach((e=>{e.forEach((e=>{if("burning"===e.burnStatus&&!e.fireS){let t=new oe(3);t.lightFire(this,e.sprite,this.flameGroup),e.fireS=t}}))}))}toggleFireSimulation(){console.log("Toggle fire simulation called"),this.isFireSimRunning=!this.isFireSimRunning,console.warn("Fire Simulation "+(this.isFireSimRunning?"Started":"Stopped")),this.events.emit("fireSimToggled",this.isFireSimRunning)}updateWeatherOverTime(){let e=Phaser.Math.Between(-2,2),t=Phaser.Math.Between(-1,1),i=Phaser.Math.Between(-3,3),s=this.weather.temperature+e,r=Phaser.Math.Clamp(this.weather.windSpeed+t,0,100),a=Phaser.Math.Clamp(this.weather.humidity+i,0,100),o=this.weather.windDirection;if(1===Phaser.Math.Between(1,10)){const e=["N","E","S","W"];o=Phaser.Utils.Array.GetRandom(e)}this.weather.updateWeather(s,a,r,o),this.events.emit("weatherUpdated",this.weather)}update(e,t){this.elapsedTime+=t/1e3,this.events.emit("updateGameClock",this.elapsedTime),this.isFireSimRunning&&this.elapsedTime-this.lastFireSpreadTime>=this.FIRE_SPREAD_INTERVAL/1e3&&(this.lastFireSpreadTime=this.elapsedTime,this.updateFireSpread(),this.updateWeatherOverTime()),this.handleCameraControls(t),this.flameGroup&&this.flameGroup.getChildren().length>0&&this.flameGroup.getChildren().forEach((e=>{e.setScale(1/this.currentZoom)}))}handleCameraControls(e){const t=this.CAMERA_SPEED/this.currentZoom,i=(this.cursors.left.isDown||this.wasd.left.isDown?-t:0)+(this.cursors.right.isDown||this.wasd.right.isDown?t:0),s=(this.cursors.up.isDown||this.wasd.up.isDown?-t:0)+(this.cursors.down.isDown||this.wasd.down.isDown?t:0);0===i&&0===s||(this.cameras.main.scrollX+=i,this.cameras.main.scrollY+=s);let r=!1;this.zoomKeys.zoomIn.isDown?(this.currentZoom=Phaser.Math.Clamp(this.currentZoom+.01,this.MIN_ZOOM,this.MAX_ZOOM),this.cameras.main.setZoom(this.currentZoom),r=!0):this.zoomKeys.zoomOut.isDown&&(this.currentZoom=Phaser.Math.Clamp(this.currentZoom-.01,this.MIN_ZOOM,this.MAX_ZOOM),this.cameras.main.setZoom(this.currentZoom),r=!0),r&&(this.events.emit("zoomChanged",this.currentZoom),this.centerMapIfNeeded())}}class he extends Phaser.Scene{constructor(){super("UIScene"),this.SCREEN_WIDTH=800,this.SCREEN_HEIGHT=600,this.UI_SIDEBAR_WIDTH=100,this.GAME_AREA_WIDTH=this.SCREEN_WIDTH-this.UI_SIDEBAR_WIDTH,this.TITLE_X=40,this.TITLE_Y=40,this.LOGIN_BUTTON_X=600,this.LOGIN_BUTTON_Y=10,this.RESTART_BUTTON_X=140,this.RESTART_BUTTON_Y=50,this.GAME_CLOCK_X=300,this.GAME_CLOCK_Y=10,this.WEATHER_X=10,this.WEATHER_Y=550,this.FIRE_BUTTON_X=600,this.FIRE_BUTTON_Y=550,this.TILE_INFO_X=10,this.TILE_INFO_Y=200,this.BUTTON_COLORS={DEFAULT:"#A0522D",HOVER:"#8B4513",FIRE_BUTTON:"#8B0000"},this.TILE_INFO_DISPLAY_TIME=3e3}preload(){var e;e=this,console.log("preloadHUD called"),e.load.image("coins","assets/coins.png"),e.load.image("hose-tooltip","assets/resources/tooltips/fire-hose.png"),e.load.image("extinguisher-tooltip","assets/resources/tooltips/fire-extinguisher.png"),e.load.image("helicopter-tooltip","assets/resources/tooltips/helicopter.png"),e.load.image("firetruck-tooltip","assets/resources/tooltips/firetruck.png"),e.load.image("airtanker-tooltip","assets/resources/tooltips/airtanker.png"),e.load.image("hotshot-crew-tooltip","assets/resources/tooltips/hotshot-crew.png"),e.load.image("smokejumper-tooltip","assets/resources/tooltips/smokejumpers.png"),e.load.image("hose","assets/resources/fire-hose.png"),e.load.image("extinguisher","assets/resources/fire-extinguisher.png"),e.load.image("helicopter","assets/resources/helicopter.png"),e.load.image("firetruck","assets/resources/firetruck.png"),e.load.image("airtanker","assets/resources/airtanker.png"),e.load.image("hotshot-crew","assets/resources/hotshot-crew.png"),e.load.image("smokejumper","assets/resources/smokejumpers.png"),e.load.image("active-hose","assets/resources/activated/fire-hose.png"),e.load.image("active-extinguisher","assets/resources/activated/fire-extinguisher.png"),e.load.image("active-helicopter","assets/resources/activated/helicopter.png"),e.load.image("active-firetruck","assets/resources/activated/firetruck.png"),e.load.image("active-airtanker","assets/resources/activated/airtanker.png"),e.load.image("active-hotshot-crew","assets/resources/activated/hotshot-crew.png"),e.load.image("active-smokejumper","assets/resources/activated/smokejumpers.png"),e.load.image("out-of-hoses","assets/resources/notifications/fire-hose.png"),e.load.image("out-of-fire-extinguishers","assets/resources/notifications/fire-extinguisher.png"),e.load.image("out-of-helicopters","assets/resources/notifications/helicopter.png"),e.load.image("out-of-firetrucks","assets/resources/notifications/firetruck.png"),e.load.image("out-of-airtankers","assets/resources/notifications/airtankers.png"),e.load.image("out-of-hotshots","assets/resources/notifications/hotshot-crews.png"),e.load.image("out-of-smokejumpers","assets/resources/notifications/smokejumpers.png"),e.load.image("cooldown","assets/resources/notifications/cooldown.png"),e.load.spritesheet("set-timer","assets/timer.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-hose","assets/64x64-Map-Tiles/Deployable%20Resources/fire-hose.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-extinguisher","assets/64x64-Map-Tiles/Deployable%20Resources/extinguisher.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-firetruck","assets//64x64-Map-Tiles/Deployable%20Resources/firetruck.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-helicopter","assets//64x64-Map-Tiles/Deployable%20Resources/helicopter.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-airtanker","assets//64x64-Map-Tiles/Deployable%20Resources/airtanker.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-hotshot","assets//64x64-Map-Tiles/Deployable%20Resources/hotshot-crew.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-smokejumpers","assets//64x64-Map-Tiles/Deployable%20Resources/smokejumpers.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-smokejumpers-dig","assets//64x64-Map-Tiles/Deployable%20Resources/trench-digger.png",{frameWidth:64,frameHeight:64}),this.load.image("zoom-in","assets/zoom-in.png"),this.load.image("zoom-out","assets/zoom-out.png"),this.load.image("Title","assets/UI/Title.png"),this.load.image("Restart Button","assets/UI/restartButton.png"),this.load.image("login","assets/UI/login.png"),this.load.image("weather_title_closed","assets/UI/weather_title_closed.png"),this.load.image("weather_title_opened","assets/UI/weather_title_opened.png"),this.load.image("humidity_full","assets/UI/humidity_full.png"),this.load.image("humidity_half","assets/UI/humidity_half.png"),this.load.image("humidity_low","assets/UI/humidity_low.png"),this.load.image("wind_1arrow","assets/UI/wind_1arrow.png"),this.load.image("wind_2arrow","assets/UI/wind_2arrow.png"),this.load.image("wind_3arrow","assets/UI/wind_3arrow.png"),this.load.image("north","/assets/UI/north.png"),this.load.image("east","/assets/UI/east.png"),this.load.image("south","/assets/UI/south.png"),this.load.image("west","/assets/UI/west.png"),this.load.image("weather_panel","assets/UI/weather_panel.png")}create(){console.log("UIScene Created"),this.createUIElements(),this.createZoomControls(),function(e){console.log("createHUD called"),e.add.rectangle(750,300,100,600,2962486).setDepth(-1),console.log("Sidebar created"),b=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"cooldown").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),I=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-hoses").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),M=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-fire-extinguishers").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),k=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-helicopters").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),C=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-firetrucks").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),_=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-airtankers").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),P=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-hotshots").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),O=e.add.sprite(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-smokejumpers").setScale(1).setDepth(500).setOrigin(.5,.5).setVisible(!1),e.input.setDefaultCursor("url(assets/cursors/glove.png), pointer");const t=.8;e.add.sprite(80,100,"coins").setScale(.3).setDepth(1).setOrigin(.5,.5),T=e.add.text(100,100,"0",{font:"24px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5).setDepth(2);let i=e.add.sprite(750,50,"hose").setScale(t).setDepth(1).setOrigin(.5,.5);i.name="hose",Z[0]=i,A=function(e,t,i,s){return s.add.text(750,90,"10/10",{font:"12px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5,.5)}(0,0,0,e),N=e.add.sprite(750,50,"set-timer").setDepth(10).setScale(1,1).setVisible(!1),X(0,i,"hose","assets/cursors/water.png",0,"WATER",0,e),J(i,"hose-tooltip",660,55,e);let s=e.add.image(750,130,"extinguisher").setScale(t).setOrigin(.5,.5);s.name="extinguisher",Z[1]=s,E=e.add.text(750,170,"5/5",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),X(0,s,"extinguisher","assets/cursors/fire-extinguisher.png",0,"WATER",0,e),J(s,"extinguisher-tooltip",660,135,e);let r=e.add.image(750,210,"helicopter").setScale(t).setOrigin(.5,.5);r.name="helicopter",Z[2]=r,F=e.add.text(750,250,"3/3",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),X(0,r,"helicopter","assets/cursors/helicopter.png",0,"WATER",0,e),J(r,"helicopter-tooltip",660,215,e);let a=e.add.image(750,290,"firetruck").setScale(t).setOrigin(.5,.5);a.name="firetruck",Z[3]=a,D=e.add.text(750,330,"3/3",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),X(0,a,"firetruck","assets/cursors/firetruck.png",0,"WATER",0,e),J(a,"firetruck-tooltip",660,295,e);let o=e.add.image(750,370,"airtanker").setScale(t).setOrigin(.5,.5);o.name="airtanker",Z[4]=o,v=e.add.text(750,410,"2/2",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),X(0,o,"airtanker","assets/cursors/airtanker.png",0,"WATER",0,e),J(o,"airtanker-tooltip",660,375,e);let n=e.add.image(750,450,"hotshot-crew").setScale(t).setOrigin(.5,.5);n.name="hotshot-crew",Z[5]=n,R=e.add.text(750,490,"1/1",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),X(0,n,"hotshot-crew","assets/cursors/hotshot-crew.png",0,"WATER",0,e),J(n,"hotshot-crew-tooltip",660,455,e);let h=e.add.image(750,530,"smokejumper").setScale(t).setOrigin(.5,.5);h.name="smokejumper",Z[6]=h,W=e.add.text(750,570,"5/5",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),X(0,h,"smokejumper","assets/cursors/launch.png",0,"WATER",0,e),J(h,"smokejumper-tooltip",660,535,e)}(this),this.hoseText=A,this.extinguisherText=E,this.helicopterText=F,this.firetruckText=D,this.airtankerText=v,this.hotshotcrewText=R,this.smokejumperText=W,this.scene.get("MapScene").events.on("updateGameClock",this.updateGameClock,this),this.scene.get("MapScene").events.on("weatherUpdated",this.updateWeatherDisplay,this),this.scene.get("MapScene").events.on("tileInfo",this.updateTileInfo,this),this.scene.get("MapScene").events.on("fireSimToggled",this.updateFireButton,this),this.scene.get("MapScene").events.on("zoomChanged",this.handleZoomChange,this),this.scene.get("MapScene").events.on("mapSizeChanged",this.updateMapInfo,this)}createUIElements(){this.add.image(40,40,"Title");const e=this.add.image(600,30,"login").setInteractive().on("pointerover",(()=>{e.setTint(9127187)})).on("pointerout",(()=>{e.clearTint()})).on("pointerdown",(()=>{this.events.removeAllListeners(),this.scene.remove("MainScene"),this.scene.start("LoginScene")})),t=this.add.image(this.RESTART_BUTTON_X,this.RESTART_BUTTON_Y,"Restart Button").setInteractive().setScale(1).on("pointerover",(()=>{t.setTint(9127187)})).on("pointerout",(()=>{t.clearTint()})).on("pointerdown",(()=>{this.events.emit("restartGame")}));this.fireButton=this.add.text(this.FIRE_BUTTON_X,this.FIRE_BUTTON_Y,"Start Fire",{font:"16px Georgia",color:"#FFF",backgroundColor:this.BUTTON_COLORS.FIRE_BUTTON,padding:{x:15,y:10}}).setScrollFactor(0).setInteractive().on("pointerdown",(()=>{console.log("Fire button clicked!"),this.events.emit("toggleFire")})),this.weatherButton=this.add.image(this.WEATHER_X,this.WEATHER_Y,"weather_title_closed").setInteractive().on("pointerdown",(()=>this.toggleWeatherPanel())),this.weatherPanel=this.add.container(10,530),this.weatherPanel.setVisible(!1);let i=this.add.image(0,0,"weather_panel").setOrigin(0,0).setScale(1);this.weatherStats=this.add.text(10,10,"Temp: --°F\nHumidity: --%"),this.windStats=this.add.text(150,10,"Wind: -- mph\nDirection: --"),this.weatherPanel.add([i,this.weatherStats,this.windStats]),this.isWeatherVisible=!1,this.gameClockText=this.add.text(this.GAME_CLOCK_X,this.GAME_CLOCK_Y,"Time: 00:00",{fontSize:"20px",fill:"#ffffff",backgroundColor:"rgba(0, 0, 0, 0.6)",padding:{x:10,y:6},align:"center",shadow:{offsetX:2,offsetY:2,color:"rgba(0, 0, 0, 0.7)",blur:4,stroke:!0,fill:!0}}).setScrollFactor(0).setDepth(10),this.zoomText=this.add.text(this.GAME_CLOCK_X,this.GAME_CLOCK_Y+30,"Zoom: 100%",{fontSize:"16px",fill:"#fff",backgroundColor:"rgba(0, 0, 0, 0.5)",padding:{x:5,y:5}}).setScrollFactor(0),this.controlsText=this.add.text(10,120,"Controls:\nWASD/Arrows: Pan\nMouse Wheel: Zoom\nRight/Middle Mouse: Pan",{fontSize:"14px",fill:"#fff",backgroundColor:"rgba(0, 0, 0, 0.5)",padding:{x:5,y:5}}).setScrollFactor(0),this.tileInfoText=this.add.text(this.TILE_INFO_X,this.TILE_INFO_Y,"Select tile\nCoordinates: n/a\nTerrain: n/a\nFlammability: n/a\nFuel: n/a\nBurn Status: n/a",{fill:"#ffffff",backgroundColor:"linear-gradient(180deg, rgba(20,20,20,0.9), rgba(0,0,0,0.7))",padding:{x:14,y:10},align:"left",shadow:{offsetX:0,offsetY:0,color:"rgba(255, 255, 255, 0.3)",blur:6,stroke:!0,fill:!0}}).setDepth(10).setScrollFactor(0).setOrigin(0).setStyle({borderRadius:"8px"})}createZoomControls(){const e=40;let t=!1;try{this.textures.exists("zoom-in")&&this.textures.exists("zoom-out")&&(t=!0)}catch(e){t=!1}t?(this.zoomInButton=this.add.image(10,320,"zoom-in").setOrigin(0).setDisplaySize(e,e).setScrollFactor(0),this.zoomOutButton=this.add.image(10,370,"zoom-out").setOrigin(0).setDisplaySize(e,e).setScrollFactor(0)):(this.zoomInButton=this.add.rectangle(10,320,e,e,6710886).setOrigin(0).setStrokeStyle(2,16777215).setScrollFactor(0),this.add.text(30,340,"+",{fontSize:"24px",fill:"#fff"}).setOrigin(.5).setScrollFactor(0),this.zoomOutButton=this.add.rectangle(10,370,e,e,6710886).setOrigin(0).setStrokeStyle(2,16777215).setScrollFactor(0),this.add.text(30,390,"-",{fontSize:"24px",fill:"#fff"}).setOrigin(.5).setScrollFactor(0)),this.zoomInButton.setInteractive().on("pointerdown",(()=>{const e=this.scene.get("MapScene");e.currentZoom=Phaser.Math.Clamp(e.currentZoom+.1,e.MIN_ZOOM,e.MAX_ZOOM),e.cameras.main.setZoom(e.currentZoom),this.handleZoomChange(e.currentZoom)})),this.zoomOutButton.setInteractive().on("pointerdown",(()=>{const e=this.scene.get("MapScene");e.currentZoom=Phaser.Math.Clamp(e.currentZoom-.1,e.MIN_ZOOM,e.MAX_ZOOM),e.cameras.main.setZoom(e.currentZoom),this.handleZoomChange(e.currentZoom)}))}update(){this.hoseText&&(this.hoseText.setText(`${B}/10`),this.extinguisherText.setText(`${U}/5`),this.helicopterText.setText(`${G}/3`),this.firetruckText.setText(`${j}/3`),this.airtankerText.setText(`${V}/2`),this.hotshotcrewText.setText(`${Y}/1`),this.smokejumperText.setText(`${K}/5`))}updateGameClock(e){let t=Math.floor(e/60),i=Math.floor(e%60),s=`${String(t).padStart(2,"0")}:${String(i).padStart(2,"0")}`;this.gameClockText.setText(`Time: ${s}`)}toggleWeatherPanel(){this.isWeatherVisible=!this.isWeatherVisible,this.isWeatherVisible?(this.weatherPanel.setVisible(!0),this.weatherButton.setTexture("weather_title_opened"),this.tweens.add({targets:this.weatherButton,y:this.weatherButton.y-50,duration:300,ease:"Power2"}),this.tweens.add({targets:this.weatherPanel,alpha:{from:0,to:1},duration:300})):(this.tweens.add({targets:this.weatherPanel,alpha:{from:1,to:0},duration:300,onComplete:()=>this.weatherPanel.setVisible(!1)}),this.weatherButton.setTexture("weather_title_closed"),this.tweens.add({targets:this.weatherButton,y:this.weatherButton.y+50,duration:300,ease:"Power2"}))}updateWeatherDisplay(e){let t="humidity_low";e.humidity>70?t="humidity_full":e.humidity>30&&(t="humidity_half");let i,s="wind_1arrow";switch(e.windSpeed>15?s="wind_3arrow":e.windSpeed>5&&(s="wind_2arrow"),e.windDirection){case"N":default:i="north";break;case"E":i="east";break;case"S":i="south";break;case"W":i="west"}this.humidityIcon&&this.weatherPanel.remove(this.humidityIcon,!0),this.windSpeedIcon&&this.weatherPanel.remove(this.windSpeedIcon,!0),this.windDirectionIcon&&this.weatherPanel.remove(this.windDirectionIcon,!0),this.weatherStats.setText(`Temp: ${e.temperature}°F\n\nHumidity:`),this.windStats.setText("Wind:\n\nDirection:"),this.humidityIcon=this.add.image(114,46,t).setScale(.3),this.windSpeedIcon=this.add.image(215,18,s).setScale(.4),this.windDirectionIcon=this.add.image(256,44,i).setScale(.3),this.weatherPanel.add([this.humidityIcon,this.windSpeedIcon,this.windDirectionIcon])}updateTileInfo(e){console.log(`Updating tile info: ${e.terrain}, ${e.flammability}, ${e.fuel}, ${e.burnStatus}`),this.tileInfoText?(this.tileInfoText.setText(`Terrain: ${e.terrain}\nFlammability: ${e.flammability}\nFuel: ${e.fuel}\nBurn Status: ${e.burnStatus}`),this.tileInfoText.setVisible(!0),this.tileInfoText.setDepth(100),this.tileInfoHideTimer&&this.tileInfoHideTimer.remove(),this.tileInfoHideTimer=this.time.delayedCall(this.TILE_INFO_DISPLAY_TIME,(()=>{this.tileInfoText.setVisible(!1)}))):console.warn("tileInfoText is not defined in UIScene!")}updateFireButton(e){this.fireButton.setText(e?"Stop Fire":"Start Fire")}handleZoomChange(e){const t=Math.round(100*e);this.zoomText.setText(`Zoom: ${t}%`)}updateMapInfo(e){console.log(`Map size changed: ${e.width}x${e.height} tiles, ${e.pixelWidth}x${e.pixelHeight} pixels`)}}var le=i(223),de=i(875);const ce=(0,le.Wp)({apiKey:"AIzaSyD1dJCegF2BZ5c01e4URiJrBPboHMqIhnI",authDomain:"wildfire-command.firebaseapp.com",projectId:"wildfire-command",storageBucket:"wildfire-command.firebasestorage.app",messagingSenderId:"824434588817",appId:"1:824434588817:web:c3276917d57b972c8a1330"}),me=(0,de.xI)(ce);class pe extends s.Scene{constructor(){super({key:"SignupScene"})}preload(){}create(){this.add.text(300,100,"Sign Up",{fontSize:"32px",color:"#fff"});const e=this.add.dom(400,170,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);e.node.setAttribute("type","text"),e.node.setAttribute("name","name"),e.node.setAttribute("placeholder","Name"),e.node.classList.add("input-field");const t=this.add.dom(400,220,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);t.node.setAttribute("type","email"),t.node.setAttribute("name","email"),t.node.setAttribute("placeholder","Email"),t.node.classList.add("input-field");const i=this.add.dom(400,270,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);i.node.setAttribute("type","password"),i.node.setAttribute("name","password"),i.node.setAttribute("placeholder","Password"),i.node.classList.add("input-field");const s=this.add.dom(400,320,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);s.node.setAttribute("type","password"),s.node.setAttribute("name","repeatPassword"),s.node.setAttribute("placeholder","Repeat Password"),s.node.classList.add("input-field");const r=this.add.dom(460,380,"button",{width:"100px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#8B0000",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer",depth:"3"},"Sign Up").setOrigin(.5);r.addListener("click"),r.on("click",(()=>{const r=e.node.value.trim(),a=t.node.value.trim(),o=i.node.value,n=s.node.value;r&&a&&o&&n?o===n?(0,de.eJ)(me,a,o).then((e=>{const t=e.user;(0,de.r7)(t,{displayName:r}).then((()=>{console.log("Login successful:",e),this.scene.stop("SignupScene"),this.scene.start("MapScene"),this.scene.launch("UIScene")})).catch((e=>{console.error("Profile update error:",e),alert("Failed to update profile: "+e.message)}))})).catch((e=>{console.error("Sign up error:",e),alert("Sign up failed: "+e.message)})):alert("Passwords do not match."):alert("Please fill in all fields.")}));const a=this.add.dom(315,380,"button",{width:"100px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#556B2F",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"Login").setOrigin(.5);a.addListener("click"),a.on("click",(()=>{this.scene.start("LoginScene")}));const o=this.add.dom(700,20,"button",{width:"130px",height:"40px",fontSize:"16px"},"PLAY").setOrigin(.5);o.addListener("click"),o.on("click",(()=>{this.scene.stop("SignupScene"),this.scene.start("MapScene"),this.scene.launch("UIScene")}))}}class ue extends s.Scene{constructor(){super({key:"LoginScene"})}preload(){}create(){this.add.text(400,100,"Please Log In",{fontSize:"36px",fill:"#FFD700",fontFamily:'"Press Start 2P", cursive',stroke:"#000",strokeThickness:4}).setOrigin(.5);const e=this.add.dom(400,200,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);e.node.setAttribute("type","email"),e.node.setAttribute("name","email"),e.node.setAttribute("placeholder","Enter Email"),e.node.classList.add("input-field");const t=this.add.dom(400,260,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);t.node.setAttribute("type","password"),t.node.setAttribute("name","password"),t.node.setAttribute("placeholder","Enter Password"),t.node.classList.add("input-field");const i=this.add.dom(470,320,"button",{width:"100px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#8B0000",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"Login").setOrigin(.5);i.addListener("click"),i.on("click",(()=>{const i=e.node.value,s=t.node.value;i&&s?(0,de.x9)(me,i,s).then((e=>{console.log("Login successful:",e),this.scene.stop("LoginScene"),this.scene.start("MapScene"),this.scene.launch("UIScene")})).catch((e=>{console.error("Login error:",e),alert(`Login failed: ${e.message}`)})):alert("Please enter both email and password.")}));const s=this.add.dom(315,320,"button",{width:"120px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#556B2F",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"New User?").setOrigin(.5);s.addListener("click"),s.on("click",(()=>{this.scene.start("SignupScene")}));const r=this.add.dom(700,20,"button",{width:"130px",height:"40px",fontSize:"16px"},"PLAY").setOrigin(.5);r.addListener("click"),r.on("click",(()=>{this.scene.stop("SignupScene"),this.scene.start("MapScene"),this.scene.launch("UIScene")}))}}console.log("Phaser Game Initializing...");const ge={type:s.AUTO,width:800,height:600,parent:"game-container",scene:[r,pe,ue,ne,he],backgroundColor:"#282c34",scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH},dom:{createContainer:!0}};new s.Game(ge)}},e=>{e.O(0,[816],(()=>e(e.s=742))),e.O()}]);