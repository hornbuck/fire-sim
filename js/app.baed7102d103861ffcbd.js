"use strict";(self.webpackChunksim_firefighter=self.webpackChunksim_firefighter||[]).push([[524],{186:(e,t,i)=>{var s=i(440);class r extends Phaser.Scene{constructor(){super({key:"IntroScene"})}preload(){this.load.image("logo","assets/temp-logo.png")}create(){const e=this.cameras.main.centerX,t=this.cameras.main.centerY;this.add.image(e,t,"logo").setOrigin(.5);const i=this.add.text(e,t+100,"Click to Start",{fontFamily:"Courier, monospace",fontSize:"32px",color:"#ffffff",backgroundColor:"#000000",padding:{x:10,y:5}}).setOrigin(.5).setInteractive();i.on("pointerdown",(()=>{this.scene.start("MainScene")})),this.tweens.add({targets:i,alpha:.5,duration:1e3,yoyo:!0,repeat:-1})}}class o{constructor(e,t,i,s){this.x=e,this.y=t,this.width=i,this.height=s,this.left=null,this.right=null}isLeaf(){return null===this.left&&null===this.right}}const a=class{constructor(e,t,i){this.root=new o(0,0,e,t),this.minPartitionSize=i}partition(e=this.root){if(!e.isLeaf())return!1;if(e.width<=this.minPartitionSize||e.height<=this.minPartitionSize)return!1;let t=Math.random()>.5;e.width>e.height&&e.width/e.height>=1.25?t=!1:e.height>e.width&&e.height/e.width>=1.25&&(t=!0);const i=(t?e.height:e.width)-this.minPartitionSize;if(i<=this.minPartitionSize)return!1;const s=Math.floor(Math.random()*(i-this.minPartitionSize+1)+this.minPartitionSize),r=(t?e.height:e.width)-s;return!(s<this.minPartitionSize||r<this.minPartitionSize||(t?(e.left=new o(e.x,e.y,e.width,s),e.right=new o(e.x,e.y+s,e.width,e.height-s)):(e.left=new o(e.x,e.y,s,e.height),e.right=new o(e.x+s,e.y,e.width-s,e.height)),console.log(`Partitioned node at (${e.x}, ${e.y}, ${e.width}, ${e.height})`),console.log(`Left: (${e.left.x}, ${e.left.y}, ${e.left.width}, ${e.left.height})`),console.log(`Right: (${e.right.x}, ${e.right.y}, ${e.right.width}, ${e.right.height})`),0))}partitionAll(e=this.root){this.partition(e)&&(this.partitionAll(e.left),this.partitionAll(e.right))}getPartitions(e=this.root,t=[]){return e.isLeaf()?t.push(e):(e.left&&this.getPartitions(e.left,t),e.right&&this.getPartitions(e.right,t)),t}visualizePartitions(){const e=this.getPartitions();console.log("Visualizing Partitions:"),e.forEach(((e,t)=>{console.log(`Partition ${t+1}: (${e.x}, ${e.y}, ${e.width}, ${e.height})`)}))}};class n{constructor(e,t,i){this.x=e,this.y=t,this.terrain=i,this.burnStatus="unburned";const s=this.getTerrainAttributes(i);this.flammability=s.flammability,this.fuel=s.fuel}getTerrainAttributes(e){return{grass:{flammability:.9,fuel:1},shrub:{flammability:.7,fuel:2},tree:{flammability:.4,fuel:3},water:{flammability:0,fuel:0}}[e]||{flammability:0,fuel:0}}toString(){return`{ x: ${this.x}, y: ${this.y}, terrain: '${this.terrain}', flammability: ${this.flammability}, fuel: ${this.fuel}, burnStatus: '${this.burnStatus}' }`}}const l=16,h=256,d=4095;let c;function p(e){const t=(()=>{const e=4294967296;let t,i;return{setSeed:s=>{i=t=(void 0===s?Math.random()*e:s)>>>0},getSeed:()=>t,rand:()=>(i=(1664525*i+1013904223)%e)/e}})();t.setSeed(e),c=new Array(4096);for(let e=0;e<4096;e++)c[e]=t.rand()}function g(e){return e*e*e*(e*(6*e-15)+10)}function u(e,t,i){return(1-i)*e+i*t}const f={seed:p,perlin2:function(e,t){void 0===c&&p(Math.random());const i=Math.floor(e),s=Math.floor(t),r=t-s,o=g(e-i),a=g(r),n=u(c[(i&d)+(s&d)*l],c[(i+1&d)+(s&d)*l],o),h=u(c[(i&d)+(s+1&d)*l],c[(i+1&d)+(s+1&d)*l],o);return u(n,h,a)},perlin3:function(e,t,i){void 0===c&&p(Math.random());const s=Math.floor(e),r=Math.floor(t),o=Math.floor(i),a=t-r,n=i-o,f=g(e-s),m=g(a),x=(g(n),u(c[(s&d)+(r&d)*l+(o&d)*h],c[(s+1&d)+(r&d)*l+(o&d)*h],f)),S=u(c[(s&d)+(r+1&d)*l+(o&d)*h],c[(s+1&d)+(r+1&d)*l+(o&d)*h],f);return u(x,S,m)}};class m{constructor(e,t,i=5,s=Math.random()){this.width=e,this.height=t,this.scale=i;const r="string"==typeof s?this.stringToNumber(s):s;f.seed(r),this.noiseGrid=this.generateNoiseGrid()}stringToNumber(e){let t=0;for(let i=0;i<e.length;i++)t=(t<<5)-t+e.charCodeAt(i),t|=0;return Math.abs(t)/1e3}generateNoiseGrid(){const e=[];for(let t=0;t<this.height;t++){const i=[];for(let e=0;e<this.width;e++){const s=f.perlin2(e/this.scale,t/this.scale);i.push(s)}e.push(i)}return e}setSeed(e){const t="string"==typeof e?this.stringToNumber(e):e;f.seed(t),this.noiseGrid=this.generateNoiseGrid()}getNoise(e,t){if(e>=this.width||t>=this.height||e<0||t<0)throw new RangeError("Coordinates out of bounds");return this.noiseGrid[t][e]}}class x{static apply(e){const t=JSON.parse(JSON.stringify(e));for(let i=1;i<e.length-1;i++)for(let s=1;s<e[0].length-1;s++){let r=this.getNeighborCounts(e,s,i);r.tree>4?t[i][s].terrain="tree":r.grass>5?t[i][s].terrain="grass":r.water>5&&(t[i][s].terrain="water")}return t}static getNeighborCounts(e,t,i){let s={tree:0,grass:0,shrub:0,water:0};return[e[i-1][t-1],e[i-1][t],e[i-1][t+1],e[i][t-1],e[i][t+1],e[i+1][t-1],e[i+1][t],e[i+1][t+1]].forEach((e=>{e&&s[e.terrain]++})),s}}class S{constructor(e,t,i,s=Date.now()+Math.random()){this.width=e,this.height=t,this.minSize=i,this.perlin=new m(e,t,5,s),this.bsp=new a(e,t,i),this.bsp.visualizePartitions(),this.grid=this.generateMap()}regenerateMap(e){this.perlin.setSeed(e),this.grid=this.generateMap()}generateMap(e){const t=Array.from({length:this.height},(()=>Array(this.width).fill(null))),i=this.bsp.getPartitions();return 0===i.length&&(console.error("BSPPartition failed to create any partitions. Falling back to single-partition grid."),i.push({x:0,y:0,width:this.width,height:this.height})),i.forEach((e=>{for(let i=e.y;i<e.y+e.height;i++)for(let s=e.x;s<e.x+e.width;s++){const e=this.perlin.getNoise(s,i),r=this.getTerrainFromNoise(e);t[i][s]=new n(s,i,r)}})),x.apply(t)}getTerrainFromNoise(e){let t="shrub";return e<.2?t="water":e<.4?t="tree":e<.7&&(t="grass"),console.log(`Noise: ${e}, Terrain: ${t}`),t}printMap(){this.grid.forEach((e=>{console.log(e.map((e=>e.terrain)).join(" | "))}))}printBurnStatusMap(){this.grid.forEach((e=>{console.log(e.map((e=>e.burnStatus)).join(" | "))}))}getTile(e,t){return e>=0&&e<this.width&&t>=0&&t<this.height?this.grid[t][e]:null}}class w{constructor(e){this.energy=e,this.sprite}lightFire(e,t,i){e.anims.exists("fireAnimConfig")||e.anims.create({key:"fireAnimConfig",frames:e.anims.generateFrameNumbers("fire-blaze"),frameRate:10,repeat:-1});let s=e.add.sprite(t.x+16,t.y,"fire-blaze").setDepth(1).setScale(.75).play("fireAnimConfig");i.add(s),s.setInteractive(),s.on("pointerdown",(function(t,i,r,o){"WATER"===M&&function(e,t,i,s){let r=new w(3);if("hose"===$)if(v>0)console.log("Hose was applied!"),v-=1,r.useHose(e,t,i,s);else{console.log("Sorry! You ran out!");const t=e.add.image(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-hoses").setScale(.8).setOrigin(.5,.5);t.setDepth(1),e.time.delayedCall(1e3,(()=>{t.destroy()}))}if("extinguisher"===$)if(O>0)O-=1,r.useFireExtinguisher(e,t,i,s);else{console.log("Sorry! You ran out!");const t=e.add.image(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-fire-extinguishers").setScale(.8).setOrigin(.5,.5);t.setDepth(1),e.time.delayedCall(1e3,(()=>{t.destroy()}))}if("helicopter"===$)if(z>0)z-=1,r.useHelicopter(e,t,i,s);else{console.log("Sorry! You ran out!");const t=e.add.image(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-helicopters").setScale(.8).setOrigin(.5,.5);t.setDepth(1),e.time.delayedCall(1e3,(()=>{t.destroy()}))}if("firetruck"===$)if(W>0)W-=1,r.useFiretruck(e,t,i,s);else{console.log("Sorry! You ran out!");const t=e.add.image(e.cameras.main.width/2,e.cameras.main.height/2,"out-of-firetrucks").setScale(.8).setOrigin(.5,.5);t.setDepth(1),e.time.delayedCall(1e3,(()=>{t.destroy()}))}"airtanker"===$&&(P>0?P-=1:console.log("Sorry! You ran out!")),"hotshot-crew"===$&&(I>0?I-=1:console.log("Sorry! You ran out!")),"smokejumper"===$&&(R>0?R-=1:console.log("Sorry! You ran out!"))}(e,s.x,s.y,s)}),this.sprite=s)}extinguishFire(){this.sprite.destroy()}useHose(e,t,i,s){console.log("Team of firefighters activated!"),e.anims.create({key:"hoseAnimConfig",frames:e.anims.generateFrameNumbers("set-hose"),frameRate:40,repeat:-1});let r=e.add.sprite(t+30,i+10,"set-hose").setDepth(1).setScale(1,1);r.play("hoseAnimConfig"),e.time.delayedCall(4e3,(()=>{r.destroy()})),e.time.delayedCall(4e3,(()=>{s.destroy()}))}useFireExtinguisher(e,t,i,s){console.log("Fire extinguisher activated!"),e.anims.create({key:"extinguisherAnimConfig",frames:e.anims.generateFrameNumbers("set-extinguisher"),frameRate:10,repeat:-1});let r=e.add.sprite(t,i,"set-extinguisher").setDepth(1).setScale(.75,.75);r.play("extinguisherAnimConfig"),e.time.delayedCall(3e3,(()=>{r.destroy()})),s.destroy()}useFiretruck(e,t,i,s){console.log("Fire truck activated!"),e.anims.create({key:"firetruckAnimConfig",frames:e.anims.generateFrameNumbers("set-firetruck"),frameRate:10,repeat:-1});let r=e.add.sprite(t+40,i,"set-firetruck").setDepth(1).setScale(1.3,1.3);r.play("firetruckAnimConfig"),e.time.delayedCall(3e3,(()=>{r.destroy()})),e.time.delayedCall(3e3,(()=>{s.destroy()}))}useHelicopter(e,t,i,s){console.log("Helicopter activated!"),e.anims.create({key:"helicopterAnimConfig",frames:e.anims.generateFrameNumbers("set-helicopter"),frameRate:30,repeat:-1});let r=e.add.sprite(t,i-40,"set-helicopter").setDepth(1).setScale(1.5,1.5);r.play("helicopterAnimConfig"),e.time.delayedCall(3500,(()=>{r.destroy()})),e.time.delayedCall(3500,(()=>{s.destroy()}))}}let b,y,k,T,F,C,A,M="",$="none",v=10,O=5,z=3,W=3,P=2,I=1,R=5;function D(e,t,i,s,r,o,a){e.setInteractive();let n=!0;e.on("pointerdown",(function(l,h,d,c){!0===n?(e.setTexture("active-"+t),a.input.setDefaultCursor("url("+i+"), pointer"),M=r,$=`${t}`,n=!1):(e.setTexture(t),a.input.setDefaultCursor("url("+s+"), pointer"),a.input.removeDebug(e),M=o,$="none",n=!0)}),this)}function G(e,t,i,s,r){let o=r.add.sprite(i,s,t);o.setVisible(!1),e.on("pointerover",(function(){o.setVisible(!0)})),e.on("pointerout",(function(){o.setVisible(!1)}))}const E=class{constructor(e,t){this.map=e,this.weather=t,console.log("Weather object received:",this.weather)}simulateFireStep(){const e=this.copyGrid();let t=0;for(let i=0;i<this.map.height;i++)for(let s=0;s<this.map.width;s++){const r=this.map.grid[i][s];"burning"===r.burnStatus&&(console.log(`Processing burning tile at (${s}, ${i})`),t+=this.processBurningTile(r,e,s,i))}console.log(`${t} tiles ignited this step.`),this.map.grid=e}copyGrid(){return JSON.parse(JSON.stringify(this.map.grid))}processBurningTile(e,t,i,s){let r=this.spreadFire(e,t),o=t[s][i];return o.fuel=Math.max(0,o.fuel-1),0===o.fuel&&(o.burnStatus="burnt",console.warn(`Tile (${i}, ${s}) is now burnt.`)),r}spreadFire(e,t){const i=this.getNeighbors(e.x,e.y);let s=0;for(const e of i){const i=t[e.y][e.x];"burning"!==i.burnStatus&&this.canIgnite(i)&&(s+=this.attemptIgnite(i))}return s}canIgnite(e){return"unburned"===e.burnStatus&&e.flammability>0}attemptIgnite(e){const t=this.calculateIgnitionChance(e);return console.log(`Ignition chance: ${t}`),t>75?(e.burnStatus="burning",1):0}getNeighbors(e,t){return[{x:-1,y:0},{x:1,y:0},{x:0,y:-1},{x:0,y:1}].map((i=>({x:e+i.x,y:t+i.y}))).filter((e=>e.x>=0&&e.x<this.map.width&&e.y>=0&&e.y<this.map.height))}calculateIgnitionChance(e){const t=100*e.flammability,i=this.getWeatherInfluenceFromWeather();console.log(`Base Chance: ${t}, Weather Influence: ${i}`);const s=t+i;return console.log(`Total Ignition Chance: ${s}`),s}getWeatherInfluenceFromWeather(){return this.weather.getWeatherInfluence()}},N=class{constructor(e=68,t=70,i=0){this.temperature=e,this.humidity=t,this.windSpeed=i}updateWeather(e,t,i){this.temperature=e,this.humidity=t,this.windSpeed=i}getWeatherInfluence(){let e=0;return e+=.05*(this.temperature-32),e-=.05*this.humidity,e+=.2*this.windSpeed,e}};class L extends Phaser.Scene{constructor(){super("MainScene"),console.log("MainScene Constructor Called"),this.gameClock=0,this.fireSpreadInterval=5e3,this.lastFireSpreadTime=0,this.isFireSimRunning=!1}preload(){var e;console.log("MainScene Preload Starting"),e=this,console.log("preloadHUD called"),e.load.image("hose-tooltip","assets/resources/tooltips/fire-hose.png"),e.load.image("extinguisher-tooltip","assets/resources/tooltips/fire-extinguisher.png"),e.load.image("helicopter-tooltip","assets/resources/tooltips/helicopter.png"),e.load.image("firetruck-tooltip","assets/resources/tooltips/firetruck.png"),e.load.image("airtanker-tooltip","assets/resources/tooltips/airtanker.png"),e.load.image("hotshot-crew-tooltip","assets/resources/tooltips/hotshot-crew.png"),e.load.image("smokejumper-tooltip","assets/resources/tooltips/smokejumpers.png"),e.load.image("hose","assets/resources/fire-hose.png"),e.load.image("extinguisher","assets/resources/fire-extinguisher.png"),e.load.image("helicopter","assets/resources/helicopter.png"),e.load.image("firetruck","assets/resources/firetruck.png"),e.load.image("airtanker","assets/resources/airtanker.png"),e.load.image("hotshot-crew","assets/resources/hotshot-crew.png"),e.load.image("smokejumper","assets/resources/smokejumpers.png"),e.load.image("active-hose","assets/resources/activated/fire-hose.png"),e.load.image("active-extinguisher","assets/resources/activated/fire-extinguisher.png"),e.load.image("active-helicopter","assets/resources/activated/helicopter.png"),e.load.image("active-firetruck","assets/resources/activated/firetruck.png"),e.load.image("active-airtanker","assets/resources/activated/airtanker.png"),e.load.image("active-hotshot-crew","assets/resources/activated/hotshot-crew.png"),e.load.image("active-smokejumper","assets/resources/activated/smokejumpers.png"),e.load.image("out-of-hoses","assets/resources/notifications/fire-hose.png"),e.load.image("out-of-fire-extinguishers","assets/resources/notifications/fire-extinguisher.png"),e.load.image("out-of-helicopters","assets/resources/notifications/helicopter.png"),e.load.image("out-of-firetrucks","assets/resources/notifications/firetruck.png"),e.load.spritesheet("fire-blaze","assets/64x64-Map-Tiles/animated-flame.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-hose","assets/64x64-Map-Tiles/Deployable%20Resources/fire-hose.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-extinguisher","assets/64x64-Map-Tiles/Deployable%20Resources/extinguisher.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-firetruck","assets//64x64-Map-Tiles/Deployable%20Resources/firetruck.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("set-helicopter","assets//64x64-Map-Tiles/Deployable%20Resources/helicopter.png",{frameWidth:64,frameHeight:64}),e.load.spritesheet("waterr","assets//64x64-Map-Tiles/water.png",{frameWidth:64,frameHeight:64}),this.load.image("water","assets/64x64-Map-Tiles/water.png"),this.load.image("grass","assets/64x64-Map-Tiles/grass.png"),this.load.image("shrub","assets/64x64-Map-Tiles/Shrubs/shrubs-on-sand.png"),this.load.image("tree","assets/64x64-Map-Tiles/Trees/trees-on-light-dirt.png"),this.load.spritesheet("water-sheet","assets/64x64-Map-Tiles/splash-sheet.png",{frameWidth:64,frameHeight:64}),this.load.image("burned-grass","assets/64x64-Map-Tiles/Burned%20Tiles/burned-grass.png"),this.load.image("burned-shrub","assets/64x64-Map-Tiles/Burned%20Tiles/burned-shrubs-on-sand.png"),this.load.image("burned-tree","assets/64x64-Map-Tiles/Burned%20Tiles/burned-trees-on-light-dirt.png")}initializeMap(){this.mapWidth=10,this.mapHeight=10,this.minSize=5,this.tileSize=32,this.currentSeed=Date.now(),console.log(`Initial Seed: ${this.currentSeed}`),this.map=new S(this.mapWidth,this.mapHeight,this.minSize,this.currentSeed),console.log("Map Partitions:"),this.map.bsp.getPartitions().forEach(((e,t)=>{console.log(`Partition ${t}: x=${e.x}, y=${e.y}, width=${e.width}, height=${e.height}`)}));const e=new N(15,40,30);this.fireSpread=new E(this.map,e),this.mapGroup=this.add.group(),this.renderMap(this.map,this.tileSize)}create(){console.log("MainScene Create Starting"),this.input.on("pointerdown",this.handleTileClick,this),this.createUIElements(),function(e){console.log("createHUD called"),e.add.rectangle(750,300,100,600,2962486),console.log("Sidebar created"),e.input.setDefaultCursor("url(assets/cursors/glove.png), pointer");const t=.8;let i=e.add.sprite(750,50,"hose").setScale(t).setOrigin(.5,.5);b=function(e,t,i,s){return s.add.text(750,90,"10/10",{font:"12px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5,.5)}(0,0,0,e),D(i,"hose","assets/cursors/water.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(i,"hose-tooltip",660,55,e);const s=e.add.image(750,130,"extinguisher").setScale(t).setOrigin(.5,.5);y=e.add.text(750,170,"5/5",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),D(s,"extinguisher","assets/cursors/fire-extinguisher.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(s,"extinguisher-tooltip",660,135,e);const r=e.add.image(750,210,"helicopter").setScale(t).setOrigin(.5,.5);k=e.add.text(750,250,"3/3",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),D(r,"helicopter","assets/cursors/helicopter.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(r,"helicopter-tooltip",660,215,e);const o=e.add.image(750,290,"firetruck").setScale(t).setOrigin(.5,.5);T=e.add.text(750,330,"3/3",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),D(o,"firetruck","assets/cursors/firetruck.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(o,"firetruck-tooltip",660,295,e);const a=e.add.image(750,370,"airtanker").setScale(t).setOrigin(.5,.5);F=e.add.text(750,410,"2/2",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),D(a,"airtanker","assets/cursors/airtanker.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(a,"airtanker-tooltip",660,375,e);const n=e.add.image(750,450,"hotshot-crew").setScale(t).setOrigin(.5,.5);C=e.add.text(750,490,"1/1",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),D(n,"hotshot-crew","assets/cursors/hotshot-crew.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(n,"hotshot-crew-tooltip",660,455,e);const l=e.add.image(750,530,"smokejumper").setScale(t).setOrigin(.5,.5);A=e.add.text(750,570,"5/5",{font:"14px Arial",fill:"#ffffff",align:"center",wordWrap:{width:80}}).setOrigin(.5,.5),D(l,"smokejumper","assets/cursors/launch.png","assets/cursors/glove.png","WATER","NO-WATER",e),G(l,"smokejumper-tooltip",660,535,e)}(this),this.initializeMap(),this.elapsedTime=0,this.startFire(),console.log("MainScene Create Finished")}createUIElements(){this.tileInfoText=this.add.text(10,400,"",{fontSize:"16px",fill:"#fff",backgroundColor:"rgba(0, 0, 0)",padding:{x:10,y:5},align:"left"}).setDepth(10).setScrollFactor(0),this.add.text(10,10,"Wildfire Command",{font:'20px "Georgia", serif',color:"#8B4513"});const e=this.add.text(600,10,"Login",{font:'16px "Georgia", serif',color:"#FFF",backgroundColor:"#A0522D",padding:{x:15,y:10}}).setInteractive().on("pointerover",(()=>{e.setStyle({backgroundColor:"#8B4513"})})).on("pointerout",(()=>{e.setStyle({backgroundColor:"#A0522D"})})).on("pointerdown",(()=>{this.events.removeAllListeners(),this.scene.remove("MainScene"),this.scene.start("LoginScene")})),t=this.add.text(10,40,"Restart Game",{font:'16px "Georgia", serif',color:"#FFF",backgroundColor:"#A0522D",padding:{x:15,y:10}}).setInteractive().on("pointerover",(()=>{t.setStyle({backgroundColor:"#8B4513"})})).on("pointerout",(()=>{t.setStyle({backgroundColor:"#A0522D"})})).on("pointerdown",(()=>{this.restartGame()}));this.fireButton=this.add.text(10,70,"Start Fire",{font:'16px "Georgia", serif',color:"#FFF",backgroundColor:"#8B0000",padding:{x:15,y:10}}).setInteractive().on("pointerover",(()=>{this.fireButton.setStyle({backgroundColor:"#A52A2A"})})).on("pointerout",(()=>{this.fireButton.setStyle({backgroundColor:"#8B0000"})})).on("pointerdown",(()=>{this.toggleFireSimulation()})),this.weatherText=this.add.text(10,100,"Weather: Loading...",{font:'16px "Georgia", serif',color:"#FFF",backgroundColor:"#556B2F",padding:{x:15,y:10}}),this.updateWeatherHUD(15,40,30),this.gameClockText=this.add.text(200,10,"Time: 00:00",{fontSize:"18px",fill:"#fff",backgroundColor:"rgba(0, 0, 0, 0.5)",padding:{x:5,y:5}}).setScrollFactor(0)}handleTileClick(e){const t=(this.cameras.main.width-this.map.width*this.tileSize)/2,i=(this.cameras.main.height-this.map.height*this.tileSize)/2;let s=Math.floor((e.x-t)/this.tileSize),r=Math.floor((e.y-i)/this.tileSize);if(console.warn(`Clicked tile coordinates: (${s}, ${r})`),s>=0&&s<this.map.width&&r>=0&&r<this.map.height){let e=this.map.getTile(s,r);console.log(e?`Tile found: ${e.toString()}`:"No tile found at this position!"),e&&this.updateTileInfoDisplay(e)}}updateTileInfoDisplay(e){this.tileInfoText.setText(`Terrain: ${e.terrain}\n        \nFlammability: ${e.flammability}\n        \nFuel: ${e.fuel}\n        \nBurn Status: ${e.burnStatus}`)}updateGameClock(e){this.elapsedTime+=e/1e3;let t=Math.floor(this.elapsedTime/60),i=Math.floor(this.elapsedTime%60),s=`${String(t).padStart(2,"0")}:${String(i).padStart(2,"0")}`;this.gameClockText.setText(`Time: ${s}`)}updateWeatherHUD(e,t,i){this.weatherText.setText(`Temp: ${e}°F | Wind: ${t} mph | Humidity: ${i}%`)}toggleFireSimulation(){this.isFireSimRunning?(console.warn("Fire Simulation Stopped"),this.isFireSimRunning=!1,this.fireButton.setText("Start Fire")):(console.warn("Fire Simulation Started"),this.isFireSimRunning=!0,this.fireButton.setText("Stop Fire"))}update(e,t){this.updateGameClock(t),this.isFireSimRunning&&this.elapsedTime-this.lastFireSpreadTime>=this.fireSpreadInterval/1e3&&(this.lastFireSpreadTime=this.elapsedTime,this.updateFireSpread()),b.setText(`${v}/10`),y.setText(`${O}/5`),k.setText(`${z}/3`),T.setText(`${W}/3`),F.setText(`${P}/2`),C.setText(`${I}/1`),A.setText(`${R}/5`)}renderMap(e,t){this.mapGroup&&!this.mapGroup.destroyed&&this.mapGroup.destroy(!0),this.mapGroup=this.add.group(),this.flameGroup?this.flameGroup.clear(!0,!0):this.flameGroup=this.add.group();const i=(this.cameras.main.width-e.width*t)/2,s=(this.cameras.main.height-e.height*t)/2;e.grid.forEach(((e,r)=>{e.forEach(((e,o)=>{const a=this.textures.exists(e.terrain)?e.terrain:"defaultTerrain",n=this.add.sprite(i+o*t,s+r*t,a).setOrigin(0).setScale(.5,.5);e.sprite=n,n.setInteractive(),n.on("pointerdown",(()=>{console.log(`Clicked on ${e.terrain} at (${o}, ${r})`)})),this.mapGroup.add(n)}))}))}restartGame(){console.log("Restarting game..."),this.currentSeed=Math.floor(1e6*Math.random()),console.log(`Current Seed: ${this.currentSeed}`),this.map.regenerateMap(this.currentSeed),this.renderMap(this.map,this.tileSize),console.log("Game restarted with a new map."),this.elapsedTime=0,this.updateGameClock(0),this.startFire()}startFire(){let e,t,i;do{e=Math.floor(Math.random()*this.map.width),t=Math.floor(Math.random()*this.map.height),i=this.map.grid[t][e]}while(0===i.flammability);i.burnStatus="burning",console.log(`Starting fire at (${e}, ${t})`),i.sprite&&(new w(3).lightFire(this,i.sprite,this.flameGroup),i.fireSprite=!0)}updateFireSpread(){console.log("Simulating fire step..."),this.fireSpread.simulateFireStep(),this.map.grid.forEach((e=>{e.forEach((e=>{"burning"!==e.burnStatus||e.fireSprite||(new w(3).lightFire(this,e.sprite,this.flameGroup),e.fireSprite=!0)}))}))}}const B=L;var H=i(223),j=i(875);const U=(0,H.Wp)({apiKey:"AIzaSyD1dJCegF2BZ5c01e4URiJrBPboHMqIhnI",authDomain:"wildfire-command.firebaseapp.com",projectId:"wildfire-command",storageBucket:"wildfire-command.firebasestorage.app",messagingSenderId:"824434588817",appId:"1:824434588817:web:c3276917d57b972c8a1330"}),Y=(0,j.xI)(U);class J extends s.Scene{constructor(){super({key:"SignupScene"})}preload(){}create(){this.add.text(300,100,"Sign Up",{fontSize:"32px",color:"#fff"});const e=this.add.dom(400,170,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);e.node.setAttribute("type","text"),e.node.setAttribute("name","name"),e.node.setAttribute("placeholder","Name"),e.node.classList.add("input-field");const t=this.add.dom(400,220,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);t.node.setAttribute("type","email"),t.node.setAttribute("name","email"),t.node.setAttribute("placeholder","Email"),t.node.classList.add("input-field");const i=this.add.dom(400,270,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);i.node.setAttribute("type","password"),i.node.setAttribute("name","password"),i.node.setAttribute("placeholder","Password"),i.node.classList.add("input-field");const s=this.add.dom(400,320,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);s.node.setAttribute("type","password"),s.node.setAttribute("name","repeatPassword"),s.node.setAttribute("placeholder","Repeat Password"),s.node.classList.add("input-field");const r=this.add.dom(460,380,"button",{width:"100px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#8B0000",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"Sign Up").setOrigin(.5);r.addListener("click"),r.on("click",(()=>{const r=e.node.value.trim(),o=t.node.value.trim(),a=i.node.value,n=s.node.value;r&&o&&a&&n?a===n?(0,j.eJ)(Y,o,a).then((e=>{const t=e.user;(0,j.r7)(t,{displayName:r}).then((()=>{console.log("Login successful:",e),this.scene.stop("SignupScene"),this.scene.add("MainScene",B,!1),this.scene.start("MainScene")})).catch((e=>{console.error("Profile update error:",e),alert("Failed to update profile: "+e.message)}))})).catch((e=>{console.error("Sign up error:",e),alert("Sign up failed: "+e.message)})):alert("Passwords do not match."):alert("Please fill in all fields.")}));const o=this.add.dom(315,380,"button",{width:"100px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#556B2F",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"Login").setOrigin(.5);o.addListener("click"),o.on("click",(()=>{this.scene.start("LoginScene")}));const a=this.add.dom(700,20,"button",{width:"130px",height:"40px",fontSize:"16px"},"PLAY").setOrigin(.5);a.addListener("click"),a.on("click",(()=>{this.scene.stop("SignupScene"),this.scene.add("MainScene",B,!1),this.scene.start("MainScene")}))}}class V extends s.Scene{constructor(){super({key:"LoginScene"})}preload(){}create(){this.add.text(400,100,"Please Log In",{fontSize:"36px",fill:"#FFD700",fontFamily:'"Press Start 2P", cursive',stroke:"#000",strokeThickness:4}).setOrigin(.5);const e=this.add.dom(400,200,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);e.node.setAttribute("type","email"),e.node.setAttribute("name","email"),e.node.setAttribute("placeholder","Enter Email"),e.node.classList.add("input-field");const t=this.add.dom(400,260,"input",{width:"200px",height:"30px",fontSize:"16px",padding:"5px"}).setOrigin(.5);t.node.setAttribute("type","password"),t.node.setAttribute("name","password"),t.node.setAttribute("placeholder","Enter Password"),t.node.classList.add("input-field");const i=this.add.dom(470,320,"button",{width:"100px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#8B0000",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"Login").setOrigin(.5);i.addListener("click"),i.on("click",(()=>{const i=e.node.value,s=t.node.value;i&&s?(0,j.x9)(Y,i,s).then((e=>{console.log("Login successful:",e),this.scene.stop("LoginScene"),this.scene.add("MainScene",B,!1),this.scene.start("MainScene")})).catch((e=>{console.error("Login error:",e),alert(`Login failed: ${e.message}`)})):alert("Please enter both email and password.")}));const s=this.add.dom(315,320,"button",{width:"120px",height:"30px",font:'16px "Georgia", serif',padding:{x:15,y:10},fontSize:"20px",color:"#fff",backgroundColor:"#556B2F",border:"3px solid #FFD700",borderRadius:"10px",cursor:"pointer"},"New User?").setOrigin(.5);s.addListener("click"),s.on("click",(()=>{this.scene.start("SignupScene")}));const r=this.add.dom(700,20,"button",{width:"130px",height:"40px",fontSize:"16px"},"PLAY").setOrigin(.5);r.addListener("click"),r.on("click",(()=>{this.scene.stop("SignupScene"),this.scene.add("MainScene",B,!1),this.scene.start("MainScene")}))}}console.log("Phaser Game Initializing...");const _={type:s.AUTO,width:800,height:600,parent:"game-container",scene:[r,J,V,B],backgroundColor:"#282c34",scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH},dom:{createContainer:!0}};new s.Game(_)}},e=>{e.O(0,[816],(()=>e(e.s=186))),e.O()}]);